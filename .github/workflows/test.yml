# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.9, 3.8, 3.7, 3.6, 3.5, 2.7 ]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
#       unittest is a standard module, which you don't need to install
        run: |
               python -m pip install --upgrade pip
               if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Bring test environment up
        working-directory: ./tests/infra
        run: |
          docker-compose up -d
          printf 'WAITING FOR APIv3'
          until $(curl --output /dev/null --silent --head --fail http://localhost:8080); do
              printf '.';
              sleep 5;
          done
          printf '\n\n'
          printf '############################'
          printf '############################'
          printf '####### UP & RUNNING #######'
          printf '############################'
          printf '############################'

      - name: Test with unittest
        run: python -m unittest discover -s ./tests/test_cases -t tests/test_cases -p *_test.py
      - name: Bring test environment down
        working-directory: ./tests/infra
        run: |
          docker-compose down --volumes
